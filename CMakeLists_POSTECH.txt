cmake_minimum_required(VERSION 3.0.0)
project(testbench VERSION 0.1.0)

## for debug, cmake .. -DCMAKE_BUILD_TYPE=Debug

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()
 
set(CMAKE_CXX_FLAGS "-Wall -Wextra")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -std=c++11 -lopencv_core -larm_compute -larm_compute_core -DARM_COMPUTE_CL")

set(LINKER_SCRIT ${PROJECT_SOURCE_DIR}/${PROJECT_NAME}.lds)
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -T ${LINKER_SCRIT}")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Xlinker -Map=${PROJECT_NAME}.map" )

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/inc /usr/local/include /home/cocel/ComputeLibrary/include /home/cocel/ComputeLibrary /opt/fsl-imx-x11/4.9.88-2.0.0/sysroots/cortexa9hf-neon-poky-linux-gnueabi/usr/include)
LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib /home/cocel/ComputeLibrary/build /opt/fsl-imx-x11/4.9.88-2.0.0/sysroots/cortexa9hf-neon-poky-linux-gnueabi/usr/lib)
LINK_LIBRARIES(openblas -lopenblas -lpthread)

file(GLOB SRCS "${PROJECT_SOURCE_DIR}/src/*.cpp")
file(GLOB MODULES "${PROJECT_SOURCE_DIR}/modules/*")

add_executable(
	${PROJECT_NAME} 
    ${SRCS}
    ${MODULES}
    ${LINKER_SCRIT}
)

